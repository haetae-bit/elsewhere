---
import { getCollection } from "astro:content";
import categories from "@/metadata/categories";

const filteredArchive = await getCollection("archive", ({ data }) => data.subcategory);
const subcategories = categories.map(category => (
  [...new Set(filteredArchive.filter(({ data }) => data.category == category).map(({ data }) => data.subcategory))]
));
---
<div class="filter">
  <label for="category-filter">Categories</label>
  <select name="category-filter" id="category-filter">
    <option disabled>Filter by category...</option>
    {categories.map(category => (
      <option 
        :selected=`filterBy('category', '${category}'); filterCategory = '${category}'`
      >
        {category}
      </option>
    ))}
  </select>
</div>

<div class="filter">
  <label for="subcategory-filter">Subcategories</label>
  <select name="subcategory-filter" id="subcategory-filter">
    <option disabled>Filter by subcategory...</option>
    {subcategories.map((category, index) => (
      <optgroup label={categories[index]}>
        {category.map(subcategory => (
          <option 
            x-on:selected=`filterBy('subcategory', '${subcategory}'); filterCategory = '${categories[index]}'`
          >
            {subcategory}
          </option>
        ))}
      </optgroup>
    ))}
  </select>
</div>

<script>
  window.Alpine.bind("filter", () => ({
    category: "",
    ['x-model']() {
      this.category;
    }
  }));
</script>